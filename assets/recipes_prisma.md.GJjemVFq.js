import{_ as s,o as a,c as n,R as o}from"./chunks/framework.3gsyVypa.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"recipes/prisma.md","filePath":"recipes/prisma.md"}'),e={name:"recipes/prisma.md"},p=o(`<h3 id="prisma" tabindex="-1">Prisma <a class="header-anchor" href="#prisma" aria-label="Permalink to &quot;Prisma&quot;">â€‹</a></h3><p>If you use Prisma, you should use a Lambda layer containing the necessary Prisma binaries and setting:</p><p><code>PRISMA_QUERY_ENGINE_LIBRARY</code> to: <code>&quot;/opt/nodejs/node_modules/.prisma/client/libquery_engine-rhel-openssl-1.0.x.so.node&quot;</code> (or whatever openSSL version is needed).</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;function&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;layers&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;my-lambda-layer-arn&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;env&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;PRISMA_QUERY_ENGINE_LIBRARY&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;...&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;function&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;layers&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;my-lambda-layer-arn&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;env&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;PRISMA_QUERY_ENGINE_LIBRARY&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;...&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,4),l=[p];function t(c,r,i,E,y,u){return a(),n("div",null,l)}const q=s(e,[["render",t]]);export{_ as __pageData,q as default};
